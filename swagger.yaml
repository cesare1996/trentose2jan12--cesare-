swagger: "2.0"
info:
  version: 1.0.0
  title: "Astronauti"
  description: Managing astronauts
  termsOfService: http://swagger.io/terms/
  contact:
    name: Cesare Tosadori
    email: cesare.tosadori@studenti.unitn.it
    url: https://trentose2jan12-cesare.herokuapp.com/
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: petstore.swagger.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /astronauts:
    get:
      description: returns all astronaut
      operationId: getAstronauts
      parameters:
        - name: firstName
          in: query
          description: astroanut firstname
          required: false
          type: string
        - name: lastName
          in: query
          description: astronaut lastname
          required: false
          type: string
        - name: id
          in: query
          description: astronaut ID
          required: false
          type: string
        - name: isInSpace
          in: query
          description: astronaut state
          required: false
          type: boolean
      responses:
        200:
          description: list of astronauts
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Uploads a new astronaut
      operationId: addAstronaut
      parameters:
        - name: lastName
          in: body
          description: new astronaut
          required: false
          schema:
            $ref: '#/definitions/NewAstronaut'
      responses:
        200:
          description: response created astronaut
          schema:
            $ref: '#/definitions/Astronaut'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /astronauts/{id}:
    get:
      description: return astronaut
      operationId: findAstronautById
      parameters:
        - name: id
          in: path
          description: id of astronaut to fetch
          required: true
          type: string
      responses:
        200:
          description: astronaut response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  
    delete:
      description: deletes a single astronaut based on the ID supplied
      operationId: deleteAstronaut
      parameters:
        - name: id
          in: path
          description: ID of astronaut to delete
          required: true
          type: string
      responses:
        204:
          description: astronaut deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Astronaut:
    allOf:
      - $ref: '#/definitions/NewAstronaut'
      - required:
        - id
        properties:
          id:
            type: string
  NewAstronaut:
    required:
      - firstName
      - lastName
      - isInSpace
    properties:
      firstName:
        type: string
      lastName:
        type: string
      isInSpace:
        type: boolean  
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string